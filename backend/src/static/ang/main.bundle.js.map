{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/batch-history/batch-history.component.css","./src/app/batch-history/batch-history.component.html","./src/app/batch-history/batch-history.component.ts","./src/app/batch-rework/batch-rework.component.css","./src/app/batch-rework/batch-rework.component.html","./src/app/batch-rework/batch-rework.component.ts","./src/app/comments/comments.component.css","./src/app/comments/comments.component.html","./src/app/comments/comments.component.ts","./src/app/comments/service/comments.service.ts","./src/app/current-batch-info/current-batch-info.component.css","./src/app/current-batch-info/current-batch-info.component.html","./src/app/current-batch-info/current-batch-info.component.ts","./src/app/finish-batch/finish-batch.component.css","./src/app/finish-batch/finish-batch.component.html","./src/app/finish-batch/finish-batch.component.ts","./src/app/floorstock/floorstock.component.css","./src/app/floorstock/floorstock.component.html","./src/app/floorstock/floorstock.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/operations.service.ts","./src/app/scoreboard/scoreboard.component.css","./src/app/scoreboard/scoreboard.component.html","./src/app/scoreboard/scoreboard.component.ts","./src/app/shift-change/shift-change.component.css","./src/app/shift-change/shift-change.component.html","./src/app/shift-change/shift-change.component.ts","./src/app/start-batch/start-batch.component.css","./src/app/start-batch/start-batch.component.html","./src/app/start-batch/start-batch.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--Start navBar.-->\\r\\n\\r\\n<div class=\\\"container-fluid\\\" style=\\\"margin-top: 1%\\\" >  \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-2\\\">\\r\\n      <div class=\\\"mycontent-left\\\">\\r\\n        <div class=\\\"jumbotron jumbotron-fluid\\\">\\r\\n          <div class=\\\"container\\\" >\\r\\n              <h3>Batch information: </h3>\\r\\n          </div>    \\r\\n          <div class=\\\"container\\\">\\r\\n            <current-batch-info></current-batch-info>\\r\\n\\r\\n               <!--<div class=\\\"\\\">\\r\\n                  \\r\\n                <div class=\\\"nav\\\">\\r\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"./start-batch\\\" routerLinkActive=\\\"active\\\">Start new batch</a>\\r\\n                </div> \\r\\n              </div> -->\\r\\n          </div>\\r\\n        </div>\\r\\n<!--may need a closing div here... github change-->\\r\\n        <div class=\\\"card-fluid\\\" >\\r\\n          <ul class=\\\"nav flex-column nav-pills nav-stacked\\\">\\r\\n            <div class=\\\"border border-dark\\\">\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"./home\\\" routerLinkActive=\\\"active\\\">Home</a>           \\r\\n              </li>\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"./comments\\\" routerLinkActive=\\\"active\\\">Comments</a>           \\r\\n              </li>\\r\\n              <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"./scoreboard\\\" routerLinkActive=\\\"active\\\">Scoreboard</a>\\r\\n              </li>\\r\\n              <!-- <li class=\\\"nav-item\\\">\\r\\n                <a class=\\\"nav-link\\\" routerLink=\\\"./finish-batch\\\" routerLinkActive=\\\"active\\\">Finish batch</a>\\r\\n              </li> -->\\r\\n          </div>\\r\\n          <br>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"./floorstock\\\" routerLinkActive=\\\"active\\\">Floorstock</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"./shift-change\\\" routerLinkActive=\\\"active\\\">Shift Change</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"./batch-history\\\" routerLinkActive=\\\"active\\\">History</a>\\r\\n          </li>               \\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n       \\r\\n<!--End navBar.-->     \\r\\n\\r\\n    <div class=\\\"col-lg-10\\\" >\\r\\n      <div class=\\\"main\\\">\\r\\n<!--Router imput here-->\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n\r\n\r\n  \r\n\r\n  constructor() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app.routing';\r\nimport { StartBatchComponent } from './start-batch/start-batch.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CommentsComponent } from './comments/comments.component';\r\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\r\nimport { FloorstockComponent } from './floorstock/floorstock.component';\r\nimport { ShiftChangeComponent } from './shift-change/shift-change.component';\r\nimport { BatchHistoryComponent } from './batch-history/batch-history.component';\r\nimport { FinishBatchComponent } from './finish-batch/finish-batch.component';\r\nimport { BatchReworkComponent } from './batch-rework/batch-rework.component';\r\nimport { CurrentBatchInfoComponent } from './current-batch-info/current-batch-info.component';\r\nimport { CommentsService } from './comments/service/comments.service';\r\nimport { OperationsService } from './operations.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StartBatchComponent,\r\n    HomeComponent,\r\n    CommentsComponent,\r\n    ScoreboardComponent,\r\n    FloorstockComponent,\r\n    ShiftChangeComponent,\r\n    BatchHistoryComponent,\r\n    FinishBatchComponent,\r\n    BatchReworkComponent,\r\n    CurrentBatchInfoComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    AppRoutingModule\r\n  ],\r\n\r\n\r\n  providers: [CommentsService, OperationsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","//https://angular.io/guide/router\r\nimport { RouterModule, Routes, Router } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BatchHistoryComponent } from './batch-history/batch-history.component';\r\nimport { CommentsComponent } from './comments/comments.component';\r\nimport { CurrentBatchInfoComponent } from './current-batch-info/current-batch-info.component'\r\nimport { FloorstockComponent } from './floorstock/floorstock.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\r\nimport { ShiftChangeComponent } from './shift-change/shift-change.component';\r\nimport { StartBatchComponent } from './start-batch/start-batch.component';\r\nimport { FinishBatchComponent } from './finish-batch/finish-batch.component';\r\nimport { BatchReworkComponent } from './batch-rework/batch-rework.component';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n       path:\"\",\r\n       redirectTo: '/home', \r\n       pathMatch: 'full' \r\n    },\r\n    {\r\n        path:\"batch-history\",\r\n        component: BatchHistoryComponent,\r\n    },\r\n    {\r\n        path: \"running-batch\",\r\n        component: CurrentBatchInfoComponent,\r\n    },\r\n    {\r\n        path:\"comments\",\r\n        component: CommentsComponent,\r\n    },\r\n    {\r\n        path:\"floorstock\",\r\n        component: FloorstockComponent,\r\n    },\r\n    {\r\n        path:\"home\",\r\n        component: HomeComponent,\r\n    },\r\n    {\r\n        path:\"scoreboard\",\r\n        component: ScoreboardComponent,\r\n    },\r\n    {\r\n        path:\"shift-change\",\r\n        component: ShiftChangeComponent,\r\n    },\r\n    {\r\n        path:\"start-batch\",\r\n        component: StartBatchComponent,\r\n    },\r\n    {\r\n        path:\"finish-batch\",\r\n        component: FinishBatchComponent,\r\n    },\r\n    {\r\n        path:\"batch-rework\",\r\n        component: BatchReworkComponent,\r\n    },\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch-history/batch-history.component.css\n// module id = ./src/app/batch-history/batch-history.component.css\n// module chunks = main","module.exports = \"\\r\\n    <div class=\\\"card-group\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body align-items-center d-flex justify-content-center\\\">\\r\\n                    <h5 class=\\\"card-title\\\"># Batch</h5>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card card card-block d-flex\\\">                \\r\\n              <div class=\\\"card-body align-items-center\\\">\\r\\n                <h5 class=\\\"card-title d-flex justify-content-center \\\">Information</h5>  \\r\\n                   <div class=\\\"d-flex justify-content-center\\\">\\r\\n                    <ul>\\r\\n                        <li>\\r\\n                            Start/stop Time         \\r\\n                        </li>\\r\\n                        <li >\\r\\n                            Units produced      \\r\\n                        </li>\\r\\n                        <li>\\r\\n                            Product number      \\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"card text-center\\\">\\r\\n              <div class=\\\"card-body card-body align-items-center d-flex justify-content-center\\\">\\r\\n               \\r\\n                <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"card-group\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                    <div class=\\\"card-body align-items-center d-flex justify-content-center\\\">\\r\\n                        <h5 class=\\\"card-title\\\"># Batch</h5>\\r\\n                    </div>\\r\\n                </div>\\r\\n    \\r\\n                <div class=\\\"card card card-block d-flex\\\">                \\r\\n                  <div class=\\\"card-body align-items-center\\\">\\r\\n                    <h5 class=\\\"card-title d-flex justify-content-center \\\">Information</h5>  \\r\\n                       <div class=\\\"d-flex justify-content-center\\\">\\r\\n                        <ul>\\r\\n                            <li>\\r\\n                                Start/stop Time         \\r\\n                            </li>\\r\\n                            <li >\\r\\n                                Units produced      \\r\\n                            </li>\\r\\n                            <li>\\r\\n                                Product number      \\r\\n                            </li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"card text-center\\\">\\r\\n                  <div class=\\\"card-body card-body align-items-center d-flex justify-content-center\\\">\\r\\n                   \\r\\n                    <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n    \\r\\n              <div class=\\\"card-group\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body align-items-center d-flex justify-content-center\\\">\\r\\n                            <h5 class=\\\"card-title\\\"># Batch</h5>\\r\\n                        </div>\\r\\n                    </div>\\r\\n        \\r\\n                    <div class=\\\"card card card-block d-flex\\\">                \\r\\n                      <div class=\\\"card-body align-items-center\\\">\\r\\n                        <h5 class=\\\"card-title d-flex justify-content-center \\\">Information</h5>  \\r\\n                           <div class=\\\"d-flex justify-content-center\\\">\\r\\n                            <ul>\\r\\n                                <li>\\r\\n                                    Start/stop Time         \\r\\n                                </li>\\r\\n                                <li >\\r\\n                                    Units produced      \\r\\n                                </li>\\r\\n                                <li>\\r\\n                                    Product number      \\r\\n                                </li>\\r\\n                            </ul>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    \\r\\n                    <div class=\\\"card text-center\\\">\\r\\n                      <div class=\\\"card-body card-body align-items-center d-flex justify-content-center\\\">\\r\\n                       \\r\\n                        <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                  <hr>\\r\\n\\r\\n                 \\r\\n\\r\\n\\r\\n        \\r\\n            \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch-history/batch-history.component.html\n// module id = ./src/app/batch-history/batch-history.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-batch-history',\r\n  templateUrl: './batch-history.component.html',\r\n  styleUrls: ['./batch-history.component.css']\r\n})\r\nexport class BatchHistoryComponent implements OnInit {\r\n  \r\n\r\n  constructor() { }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/batch-history/batch-history.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch-rework/batch-rework.component.css\n// module id = ./src/app/batch-rework/batch-rework.component.css\n// module chunks = main","module.exports = \"<div class=\\\"text-center\\\" style=\\\"margin-top:15px;\\\">\\r\\n  <h3 class=\\\"h3header\\\">\\r\\n    {{ title }}\\r\\n  </h3>\\r\\n  <br>\\r\\n  <div class=\\\"finishBatch\\\">\\r\\n  <div class=\\\"row\\\" style=\\\"margin-top:20px;\\\">\\r\\n    <h5 class=\\\"col-lg-6\\\">\\r\\n      {{ groninger1 }}\\r\\n    </h5>\\r\\n    <h5 class=\\\"col-lg-6\\\">\\r\\n        {{ groninger2 }}\\r\\n    </h5>\\r\\n  </div>\\r\\n  <form #batchEndForm='ngForm' (ngSubmit)='submitEndBatch($event,batchEndForm)'>\\r\\n  \\r\\n    <div class=\\\"form-group row firstInput\\\">\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n        <input type=\\\"total\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n      <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Total</label>\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n          <input type=\\\"total\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row firstInput\\\">\\r\\n        <div class=\\\"col-lg-4\\\">\\r\\n          <input type=\\\"approved\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Approved/Good</label>\\r\\n        <div class=\\\"col-lg-4\\\">\\r\\n            <input type=\\\"approved\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row firstInput\\\">\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <input type=\\\"rejected\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n          <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Rejected/Bad</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"rejected\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>  \\r\\n\\r\\n        <div class=\\\"form-group firstInput row yieldField\\\">\\r\\n          <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Yield</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <input type=\\\"yield\\\" class=\\\"form-control\\\">\\r\\n          </div> \\r\\n        </div>  \\r\\n\\r\\n      <div class=\\\"btn-finishBatch\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary  finishBatchLabels\\\" routerLink=\\\"/batch-rework\\\" routerLinkActive=\\\"active\\\">\\r\\n          Update\\r\\n        </button>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary finishBatchLabels\\\">\\r\\n          Cancel\\r\\n        </button>\\r\\n      </div>\\r\\n  </form>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/batch-rework/batch-rework.component.html\n// module id = ./src/app/batch-rework/batch-rework.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-batch-rework',\r\n  templateUrl: './batch-rework.component.html',\r\n  styleUrls: ['./batch-rework.component.css']\r\n})\r\nexport class BatchReworkComponent implements OnInit {\r\ntitle = \"Rework batch\";\r\ngroninger1 = \"Final HMI Data Groninger 1\";\r\ngroninger2 = \"Final HMI Data Groninger 2\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/batch-rework/batch-rework.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/comments/comments.component.css\n// module id = ./src/app/comments/comments.component.css\n// module chunks = main","module.exports = \"<div class=\\\"text-center\\\" style=\\\"margin-top:15px;\\\">\\r\\n  <h3 class=\\\"mainTitleComments\\\">\\r\\n  {{ mainTitle }}\\r\\n</h3>\\r\\n<h5 class=\\\"addCommentTitle\\\">\\r\\n  {{ addCommentTitle }}\\r\\n</h5>\\r\\n<form class=\\\"commentForm\\\">\\r\\n\\r\\n  <div class=\\\"form-group row commentInput\\\">\\r\\n      <div class=\\\"col-lg-2\\\">\\r\\n        <label>Name:</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" #newCommentName>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <div class=\\\"col-lg-2\\\">\\r\\n    <label>Comment:</label>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-4\\\">\\r\\n    <textarea type=\\\"text\\\" class=\\\"form-control commentTextarea\\\" #newComment\\r\\n    (keyup.enter)=\\\"createComment(newComment.value)\\\"\\r\\n    ></textarea>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"notification is-primary\\\">\\r\\n\\r\\n<button (click)=\\\"createComment(newComment.value, newCommentName.value)\\\" class=\\\"btn btn-primary btn-addComment\\\">Add comment</button>\\r\\n\\r\\n</div>\\r\\n</form>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n<div class=\\\"text-center\\\" style=\\\"margin-top:15px;\\\">\\r\\n  <h5 class=\\\"commentListTitle\\\">\\r\\n    {{ commentListTitle }}\\r\\n  </h5>\\r\\n  <!-- newly generated comments: -->\\r\\n  <div class=\\\"col-lg-12 text-left notification is-primary commentList\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let item of newComments\\\">\\r\\n        <b>{{dateNow | date: 'M/d/yy, H:mm a'}}</b> - {{ item }}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <!-- Comments from API: -->\\r\\n  <div class=\\\"col-lg-12 text-left notification is-primary commentList\\\">\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let comment of comments\\\">\\r\\n        <b>{{ comment.post_date | date: 'M/d/yy, H:mm a' }}</b> - {{ comment.user_name }}: {{comment.text_comment}}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div> \\r\\n\\r\\n<hr>\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/comments/comments.component.html\n// module id = ./src/app/comments/comments.component.html\n// module chunks = main","import { CommentsService } from './service/comments.service'; \r\nimport { Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Post } from './comment';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/retry';\r\nimport 'rxjs/add/observable/of';\r\n\r\n\r\n@Component({\r\n  selector: 'app-comments',\r\n  templateUrl: './comments.component.html',\r\n  styleUrls: ['./comments.component.css'],\r\n})\r\nexport class CommentsComponent implements OnInit {\r\n  //Dynamic titles: \r\n  addCommentTitle = \"Add comment\";\r\n  commentListTitle = \"Comments list\";\r\n  mainTitle = \"Comments\"; \r\n  \r\n  //Variables\r\n  dateNow : Date = new Date(); // to display current date\r\n  comments: JSON []; // list of comments from API\r\n  newComment: Observable<any>; // for user added comments\r\n  \r\n  constructor(private commentsService:CommentsService) { } //import injectable service\r\n\r\n  ngOnInit() {\r\n    this.getComments()\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.commentsService\r\n  }\r\n\r\n  getComments() {\r\n    // Subscribe to service and save the data in comments list as json obj\r\n    this.commentsService.getComments().subscribe(data =>{\r\n      this.comments = data as JSON []\r\n    });\r\n  }\r\n\r\n  // Function to handle newly generated comments\r\n  createComment(formText, formName) {\r\n    // The comment data to be posted. Temporary solution to comment id\r\n    console.log(typeof formText)\r\n    console.log(typeof formName)\r\n    let commentData = {\r\n      comment_id: this.comments.length,\r\n      user_name: formName,\r\n      post_date: new Date(),\r\n      text_comment: formText,\r\n      batch_number: '1000000001'\r\n    }\r\n    console.log(commentData.text_comment)\r\n    console.log(commentData.user_name)\r\n    // Converts to JSON\r\n    let newData = JSON.stringify(commentData)\r\n\r\n    console.log(newData)\r\n\r\n    // Runs service and subsrcibes to data. Puts data in observable\r\n    this.commentsService.addComment(newData).subscribe(data =>{\r\n      this.newComment = data as Observable<any>\r\n  });\r\n\r\n  // Gets updated comment list from api\r\n  this.getComments()\r\n}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/comments/comments.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\r\nimport { RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Post } from '../comment';\r\n\r\n\r\n@Injectable()\r\nexport class CommentsService {\r\n  \r\n  readonly ROUTE_URL_GET = 'http://localhost:8000/api/operations/comment/'; // hard coded URL for api to get all comments\r\n  readonly ROUTE_URL_POST = 'http://localhost:8000/api/operations/comment/create/';\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  // the method other apps subscribe to in order to get the api\r\n  getComments() {\r\n    return this.http.get(this.ROUTE_URL_GET) //should add a catch error func here, like: import \"rxjs/add/operator/catch\";\r\n  }\r\n\r\n  addComment(data) {\r\n    const httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'my-auth-token'})\r\n    }\r\n    return this.http.post(this.ROUTE_URL_POST, data, httpOptions)\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/comments/service/comments.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/current-batch-info/current-batch-info.component.css\n// module id = ./src/app/current-batch-info/current-batch-info.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"prodActive; then pActive else pStop\\\"></div>\\r\\n\\r\\n<ng-template #pActive>\\r\\n    <p>Order ID: {{ prodInfo.order }}</p>\\r\\n    <p>Article number: {{ prodInfo.article }}</p>\\r\\n    <p>Batch number: {{ prodInfo.batch }}</p>\\r\\n    <a class=\\\"btn btn-primary\\\" routerLink=\\\"./finish-batch\\\">Finish batch</a>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #pStop>\\r\\n    <a class=\\\"btn btn-primary\\\" routerLink=\\\"./start-batch\\\">Start Batch</a>\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/current-batch-info/current-batch-info.component.html\n// module id = ./src/app/current-batch-info/current-batch-info.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OperationsService } from '../operations.service';\r\n\r\n\r\n@Component({\r\n  selector: 'current-batch-info',\r\n  templateUrl: './current-batch-info.component.html',\r\n  styleUrls: ['./current-batch-info.component.css']\r\n})\r\nexport class CurrentBatchInfoComponent implements OnInit, OnDestroy {\r\n  private routeSub: any;\r\n  private batchnr: number;\r\n  private ordernr: number;\r\n  private prodnr: number;\r\n\r\n  private prodActive: boolean;\r\n  private prodInfo: {};\r\n\r\n  constructor(private route: ActivatedRoute, private data: OperationsService) { }\r\n\r\n  ngOnInit() {\r\n    this.routeSub = this.route.params.subscribe(params =>{\r\n      //this.batchInfo = params  //not sure about var name, will change\r\n         this.batchnr = params.batchnr\r\n         this.ordernr = params.ordernr\r\n         this.prodnr = params.prodnr\r\n\r\n    })\r\n    \r\n    //TODO: Use HTTP.get() to fetch last batch from DB. If it is missing an end-date, set prodActive to true. Else set to false.\r\n    // Is this really a valid way to check if a batch is running? \r\n    //Better to add attribute 'active' to batch model and check DB is there is an active batch running. This gives us the ability to pause a batch.\r\n\r\n    //Use operationsService to share information between start-batch, finish-batch and current-batch-info\r\n    this.data.prodActiveObservable.subscribe(active => this.prodActive = active)\r\n    this.data.prodInfoObservable.subscribe(info => this.prodInfo = info)\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routeSub.unsubscribe();\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/current-batch-info/current-batch-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/finish-batch/finish-batch.component.css\n// module id = ./src/app/finish-batch/finish-batch.component.css\n// module chunks = main","module.exports = \"<div class=\\\"text-center\\\" style=\\\"margin-top:15px;\\\">\\r\\n      <h3 class=\\\"h3header\\\">\\r\\n      {{ title }}\\r\\n    </h3>\\r\\n    <br>\\r\\n    <div class=\\\"finishBatch\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top:20px;\\\">\\r\\n      <h5 class=\\\"col-lg-6\\\">\\r\\n        {{ groninger1 }}\\r\\n      </h5>\\r\\n      <h5 class=\\\"col-lg-6\\\">\\r\\n          {{ groninger2 }}\\r\\n      </h5>\\r\\n    </div>\\r\\n    <form #batchEndForm='ngForm' (ngSubmit)='submitEndBatch($event,batchEndForm)'>\\r\\n    \\r\\n      <div class=\\\"form-group row firstInput\\\">\\r\\n        <div class=\\\"col-lg-4\\\">\\r\\n          <input type=\\\"total\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Total</label>\\r\\n        <div class=\\\"col-lg-4\\\">\\r\\n            <input type=\\\"total\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row firstInput\\\">\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n            <input type=\\\"approved\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n          <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Approved/Good</label>\\r\\n          <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"approved\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row firstInput\\\">\\r\\n            <div class=\\\"col-lg-4\\\">\\r\\n              <input type=\\\"rejected\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Rejected/Bad</label>\\r\\n            <div class=\\\"col-lg-4\\\">\\r\\n                <input type=\\\"rejected\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n          </div>  \\r\\n      \\r\\n          <div class=\\\"form-group row firstInput border border-secondary col-lg-6\\\" style=\\\"margin-top:50px; margin-left:97px;\\\">\\r\\n              <label for=\\\"inputTotal\\\" class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Re-labeling</label>\\r\\n              <div style=\\\"margin-top:7px;\\\">\\r\\n              <div class=\\\"form-check form-check-inline\\\">\\r\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"inlineCheckbox1\\\" value=\\\"option1\\\">\\r\\n                  <label class=\\\"form-check-label finishBatchLabels\\\" for=\\\"inlineCheckbox1\\\">Yes</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-check form-check-inline\\\">\\r\\n                  <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"inlineCheckbox2\\\" value=\\\"option2\\\">\\r\\n                  <label class=\\\"form-check-label finishBatchLabels\\\" for=\\\"inlineCheckbox2\\\">No</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>  \\r\\n\\r\\n            <div class=\\\"form-group firstInput row yieldField\\\">\\r\\n              <label class=\\\"col-lg-4 col-form-label text-center finishBatchLabels\\\">Yield</label>\\r\\n              <div class=\\\"col-lg-4\\\">\\r\\n                <input type=\\\"yield\\\" class=\\\"form-control\\\">\\r\\n              </div> \\r\\n            </div> \\r\\n\\r\\n        <div class=\\\"btn-finishBatch\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary  finishBatchLabels\\\" routerLink=\\\"/batch-rework\\\" routerLinkActive=\\\"active\\\">\\r\\n            Update\\r\\n          </button>\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-secondary finishBatchLabels\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n        </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/finish-batch/finish-batch.component.html\n// module id = ./src/app/finish-batch/finish-batch.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-finish-batch',\r\n  templateUrl: './finish-batch.component.html',\r\n  styleUrls: ['./finish-batch.component.css']\r\n})\r\nexport class FinishBatchComponent implements OnInit {\r\ntitle = \"Finish batch\";\r\ngroninger1 = \"Final HMI Data Groninger 1\";\r\ngroninger2 = \"Final HMI Data Groninger 2\";\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/finish-batch/finish-batch.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/floorstock/floorstock.component.css\n// module id = ./src/app/floorstock/floorstock.component.css\n// module chunks = main","module.exports = \"<h2>\\r\\n    <i>Examples of content on this page:</i>\\r\\n</h2>\\r\\n    \\r\\n<br>\\r\\n<h4>\\r\\n    *Copy of current Excel layout.\\r\\n</h4>\\r\\n<p>\\r\\n    List of recent activity when retreiving floorstock materials. How does this relate to other parts of the system? \\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n    *Material change per batch\\r\\n</h4>\\r\\n<p>\\r\\n    Track what floorstock materials that has been changed per batch, and the date for when this occured. Is this a necessary feature?\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n    *Inventory/stock info\\r\\n</h4>\\r\\n<p>\\r\\n    Sort of like an inventory to show what is in stock at the moment. Again, is this a necessary feature?\\r\\n    This assumes floorstock materials is not tracked by SAP.\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/floorstock/floorstock.component.html\n// module id = ./src/app/floorstock/floorstock.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-floorstock',\r\n  templateUrl: './floorstock.component.html',\r\n  styleUrls: ['./floorstock.component.css']\r\n})\r\nexport class FloorstockComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/floorstock/floorstock.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<h2>Sidebar</h2>\\r\\n<hr>\\r\\n<p>\\r\\n  Batch number: <b>{{ batchnr }}</b>\\r\\n</p>\\r\\n<p>\\r\\n  Order number: <b>{{ ordernr }}</b>\\r\\n</p>\\r\\n\\r\\n<h2>\\r\\n  <i>Examples of content on this page:</i>\\r\\n</h2>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n  *Current Batch Details.\\r\\n</h4>\\r\\n<p>\\r\\n  All info for current batch. Yield, Scrap, HMI output, labels used etc. Ability to enter more data for the batch. \\r\\n  Should operators be able to enter data for a batch <b>during</b> production of a batch or only when the batch is finished?  \\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n  *VFAL output statistics.\\r\\n</h4>\\r\\n<p>\\r\\n  Current production output over time in a graph. Compare with expected output.\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n  *Message box.\\r\\n</h4>\\r\\n<p>\\r\\n    Manager/planner can communicate with operators through this message box. Sort of like a chat, with notification when there is an unread message.\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n  *Comments.\\r\\n</h4>\\r\\n<p>\\r\\n  Put comments section on this page instead. Add and view comment history on this page. \\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n \r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject'\r\n\r\n@Injectable()\r\nexport class OperationsService {\r\n    //TODO: prodActive is now false by default (on page refresh etc.). Should get its value from the DB instead. Same with prodInfo\r\n\r\n    //This variable is determining if a batch is currently running. It is shared between start-batch, finish-batch and current-batch-info.\r\n    //It is modified as an observable make it shareable between the components. \r\n    private prodActive = new BehaviorSubject<boolean>(false);\r\n    prodActiveObservable = this.prodActive.asObservable();\r\n\r\n    //This variable is holding the data values for the current running batch. It is shared between start-batch, finish-batch and current-batch-info.\r\n    //It is modified as an observable make it shareable between the components. \r\n    private prodInfo = new BehaviorSubject<{}>(null);\r\n    prodInfoObservable = this.prodInfo.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  //This method changes the status of a batch running or a batch not running.\r\n  changeProdStatus(active: boolean) {\r\n    this.prodActive.next(active);\r\n  }\r\n\r\n  //This method sets the data values for the current running batch.\r\n  changeProdInfo(info: {}){\r\n    this.prodInfo.next(info)\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/operations.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scoreboard/scoreboard.component.css\n// module id = ./src/app/scoreboard/scoreboard.component.css\n// module chunks = main","module.exports = \"<h2>\\r\\n    <i>Examples of content on this page:</i>\\r\\n</h2>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n    *Copy of current Excel layout.\\r\\n</h4>\\r\\n<p>\\r\\n    Current batch Scoreboard. Ability to enter output per hour. Or should this be done in the home view? What is best for operators? \\r\\n    Also, maybe past batches scoreboard for comparision.\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n    *Input for current batch + statistics.\\r\\n</h4>\\r\\n<p>\\r\\n    Ability to input output per hour of current batch. Visualize this in a graph compared to expected output. \\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/scoreboard/scoreboard.component.html\n// module id = ./src/app/scoreboard/scoreboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-scoreboard',\r\n  templateUrl: './scoreboard.component.html',\r\n  styleUrls: ['./scoreboard.component.css']\r\n})\r\nexport class ScoreboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/scoreboard/scoreboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shift-change/shift-change.component.css\n// module id = ./src/app/shift-change/shift-change.component.css\n// module chunks = main","module.exports = \"<h2>\\r\\n    <i>Examples of content on this page:</i>\\r\\n</h2>\\r\\n    \\r\\n<br>\\r\\n<h4>\\r\\n    *Copy of current Excel layout.\\r\\n</h4>\\r\\n<p>\\r\\n    Ability to input people on shift per hour and list of shift-changes for previous batches. \\r\\n    Is the list of past shift-changes really relevant for operators to see though?\\r\\n</p>\\r\\n\\r\\n<br>\\r\\n<h4>\\r\\n    *Combine with scoreboard?\\r\\n</h4>\\r\\n<p>\\r\\n    Ability to input scoreboard output per hour and number of people on shift per hour in same view. \\r\\n    Combine the two together since both track changes in production per hour. \\r\\n    Create some sort of info page that displays information of current batch per hour (# people on shift, production output etc.)\\r\\n</p>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shift-change/shift-change.component.html\n// module id = ./src/app/shift-change/shift-change.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shift-change',\r\n  templateUrl: './shift-change.component.html',\r\n  styleUrls: ['./shift-change.component.css']\r\n})\r\nexport class ShiftChangeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shift-change/shift-change.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/start-batch/start-batch.component.css\n// module id = ./src/app/start-batch/start-batch.component.css\n// module chunks = main","module.exports = \"<div class=\\\"text-center\\\">\\r\\n<h3 class=\\\"h3Header\\\">\\r\\n  {{ title }}\\r\\n</h3>\\r\\n<br>\\r\\n\\r\\n<!-- A form that sends input data to a function submitBatch with parameters ordernr, prodnr and batchnr -->\\r\\n<form #batchForm='ngForm' (ngSubmit)='submitBatch($event,batchForm)'>\\r\\n\\r\\n\\r\\n  <!-- User input for order number -->\\r\\n  <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputOrderNr\\\" class=\\\"col-lg-4 col-form-label text-right\\\">Add order</label>\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputOrderNr\\\" placeholder=\\\"Order number\\\" name='ordernr' [(ngModel)]=\\\"newOrder\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Dropdown for products. ngValue is sent.  -->\\r\\n  <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputProductNr\\\" class=\\\"col-lg-4 col-form-label text-right\\\">Add product</label>\\r\\n      <div *ngIf=\\\"prodData\\\" class=\\\"col-lg-4 dropdown\\\">\\r\\n          <select [(ngModel)]=\\\"selected\\\" name=\\\"prodnr\\\" class=\\\"selectProd\\\">\\r\\n          <option *ngFor=\\\"let data of prodData\\\" class=\\\"optionProd\\\"[(ngValue)]=\\\"data.article_number\\\">{{ data.article_number }}, {{ data.product_name }}</option>\\r\\n      </select>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- User input for batch number -->\\r\\n  <div class=\\\"form-group row\\\">\\r\\n      <label for=\\\"inputBatchNr\\\" class=\\\"col-lg-4 col-form-label text-right\\\">Add batch</label>\\r\\n      <div class=\\\"col-lg-4\\\">\\r\\n      <input type=\\\"batch\\\" class=\\\"form-control\\\" id=\\\"inputBatchNr\\\" placeholder=\\\"Batch number\\\" name='batchnr' [(ngModel)]=\\\"newBatch\\\">\\r\\n    </div>\\r\\n    </div>  \\r\\n  \\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-default btn-startBatch\\\">\\r\\n    Start batch\\r\\n  </button>\\r\\n\\r\\n</form>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/start-batch/start-batch.component.html\n// module id = ./src/app/start-batch/start-batch.component.html\n// module chunks = main","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { OperationsService } from '../operations.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Component({\r\n  selector: 'start-batch',\r\n  templateUrl: './start-batch.component.html',\r\n  styleUrls: ['./start-batch.component.css']\r\n})\r\n\r\nexport class StartBatchComponent implements OnInit, OnDestroy {\r\n  private prodActive: boolean;\r\n  private prodInfo: {};\r\n  private batch: string;\r\n  private order: string;\r\n  private article: string;\r\n\r\n\r\n  //What is this below?\r\n  newBatch: number;\r\n  \r\n  title = \"Start new batch\";\r\n\r\n\r\n  prodData: any [];\r\n\r\n  readonly ROOT_URL = 'http://localhost:8000/api/operations/product/'\r\n\r\n\r\n  @Input()\r\n  passedQuery: number;\r\n  constructor(private router: Router, private data: OperationsService, private http: HttpClient) {   \r\n      }\r\n\r\n  ngOnInit() {\r\n    //Use operationsService to share information between start-batch, finish-batch and current-batch-info\r\n    this.data.prodActiveObservable.subscribe(active => this.prodActive = active)\r\n    this.data.prodInfoObservable.subscribe(info =>this.prodInfo = info)\r\n\r\n    this.http.get(this.ROOT_URL).subscribe(\r\n      data => {\r\n        this.prodData = data as any [];\t\t// FILL THE ARRAY WITH DATA.\r\n      },\r\n    );\r\n\r\n    if(this.passedQuery) {\r\n      this.newBatch = this.passedQuery\r\n\r\n    }\r\n    }\r\n  \r\n\r\n  ngOnDestroy() {\r\n   // this.currentBatchObservable.usubscribe() // I want to do this but cant\r\n  }\r\n\r\n\r\n  submitBatch(event, formData) {\r\n    this.batch = formData.value['batchnr'];\r\n    this.order = formData.value['ordernr'];\r\n    this.article = formData.value['prodnr']\r\n\r\n    if (this.batch && this.order) {\r\n      this.prodInfo = {batch: this.batch, order: this.order, article: this.article}\r\n      this.data.changeProdStatus(true);\r\n      this.data.changeProdInfo(this.prodInfo)\r\n      console.log(\"Production status: \" +  this.prodActive)\r\n\r\n      this.router.navigate(['./home'])\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/start-batch/start-batch.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}